@using  XpertStudio.Common.Data

@inherits MudBaseInput<T>

@typeparam T

<CascadingValue Name="SubscribeToParentForm" Value="false" IsFixed="true">
    <div class="@AutocompleteClassname">
        <MudInputControl Label="@Label" Variant="@Variant" HelperText="@HelperText" HelperTextOnFocus="@HelperTextOnFocus" FullWidth="@FullWidth" Margin="@Margin" Class="@Classname" Style="@Style"
                         Error="@Error" ErrorText="@ErrorText" Disabled="@GetDisabledState()" @onclick="@ToggleMenu" Required="@Required" ForId="@FieldId">
            <InputContent>
                <MudInput @ref="_elementReference" @key="_elementKey" InputType="InputType.Text"
                          Class="mud-select-input" Margin="@Margin"
                          Variant="@Variant"
                          TextUpdateSuppression="@TextUpdateSuppression"
                          Value="@Text" DisableUnderLine="@DisableUnderLine"
                          Disabled="@GetDisabledState()" ReadOnly="@GetReadOnlyState()" Error="@Error"
                          OnAdornmentClick="@OnAdornmentClick" AdornmentIcon="@CurrentIcon" Adornment="@Adornment" AdornmentColor="@AdornmentColor" IconSize="@IconSize" AdornmentText="@AdornmentText"
                          Clearable="@(!GetReadOnlyState() && Clearable)" OnClearButtonClick="@OnClearButtonClick"
                          @attributes="UserAttributes"
                          TextChanged="OnTextChanged" OnBlur="OnInputBlurred"
                          OnKeyDown="@this.OnInputKeyDown"
                          OnKeyUp="@this.OnInputKeyUp" autocomplete=@("mud-disabled-"+Guid.NewGuid()) KeyUpPreventDefault="KeyUpPreventDefault"
                          Placeholder="@Placeholder" Immediate="true"
                          InputMode="@InputMode" Pattern="@Pattern"
                          T="string" />

                @if (ShowProgressIndicator && IsLoading)
                {
                    @if (ProgressIndicatorTemplate != null)
                    {
                        @ProgressIndicatorTemplate
                    }
                    else
                    {
                        <div class="@CircularProgressClassname">
                            <MudProgressCircular Color="ProgressIndicatorColor" Indeterminate="true" Size="Size.Small" />
                        </div>
                    }
                }

                <MudPopover Open="@IsOpen" MaxHeight="@MaxHeight" AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" Class="@PopoverClass" RelativeWidth="true">
                    @if (ProgressIndicatorInPopoverTemplate != null && IsLoading)
                    {
                        @ProgressIndicatorInPopoverTemplate
                    }
                    else if (FinderPage != null && FinderUrl != null)
                    {
                        //New Code(07082024)
                        if (objFinderDialog != null)
                        {
                            if (IsMultiSelectFinder)
                            {
                                objFinderDialog.SelectedItems = SelectedValues?.Cast<IFinderData>().ToList();
                            }
                            else
                            {
                                objFinderDialog.SelectedFinderData = SelectedData;
                            }
                        }
                        if (IsCustomFinder == false)
                        {
                            <FinderDialog1 @ref=objFinderDialog IsMultiSelectFinder="@IsMultiSelectFinder" FinderPage="FinderPage" FinderUrl="FinderUrl" OnSelectedDataChanged="OnFinderDataChanged" OnSelectedRowsChanged="OnFinderSelectedRowsChanged" />
                        }
                        else
                        {
                            <FinderDialog1 @ref=objFinderDialog IsMultiSelectFinder="@IsMultiSelectFinder" @onclick="ValidateParameters" FinderPage="FinderPage" FinderUrl="FinderUrl" OnSelectedDataChanged="OnFinderDataChanged" OnSelectedRowsChanged="OnFinderSelectedRowsChanged" />
                        }                        
                    }
                    else if (GetPaginatedDataMethod!=null)
                    {
                        <FinderDialog1 @ref=objFinderDialog IsMultiSelectFinder="@IsMultiSelectFinder" GetPaginatedDataAsync="GetPaginatedDataMethod" TotalItems="TotalRows" OnSelectedDataChanged="OnFinderDataChanged" OnSelectedRowsChanged="OnFinderSelectedRowsChanged" />
                    }
                    else if (DataSource != null)
                    {
                        <FinderDialog1 @ref=objFinderDialog IsMultiSelectFinder="@IsMultiSelectFinder" DataSource="DataSource" OnSelectedDataChanged="OnFinderDataChanged" OnSelectedRowsChanged="OnFinderSelectedRowsChanged" SelectedData="SelectedData" />
                    }
                    else if (_items != null && _items.Length != 0)
                    {
                        @if (BeforeItemsTemplate != null)
                        {
                            <div class="pa-1">
                                @BeforeItemsTemplate
                            </div>
                        }

                        <FinderDialog1 @ref=objFinderDialog IsMultiSelectFinder="@IsMultiSelectFinder" Items="(IEnumerable<IFinderData>)_items.ToList()" OnSelectedDataChanged="OnFinderDataChanged" OnSelectedRowsChanged="OnFinderSelectedRowsChanged" SelectedData="SelectedData" />
                        
                    }
                    
                    
                    else if (NoItemsTemplate != null)
                    {
                        @if (BeforeItemsTemplate != null)
                        {
                            <div class="pa-1">
                                @BeforeItemsTemplate
                            </div>
                        }
                        <div class="pa-1">
                            @NoItemsTemplate
                        </div>
                    }
                    else if (BeforeItemsTemplate != null && IsLoading is false)
                    {
                        <div class="pa-1">
                            @BeforeItemsTemplate
                        </div>
                    }
                    @if (AfterItemsTemplate != null && IsLoading is false)
                    {
                        <div class="pa-1">
                            @AfterItemsTemplate
                        </div>
                    }
                </MudPopover>
            </InputContent>
        </MudInputControl>
    </div>
</CascadingValue>

<MudOverlay Visible="IsOpen" OnClick="@ToggleMenu" @ontouchstart="@ToggleMenu" LockScroll="false" />