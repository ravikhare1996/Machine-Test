@page "/MachineTest/Transaction/PurchaseOrderBasePage/"
@inherits BasePage

@using System.ComponentModel.DataAnnotations
@using BlazorPWA.Shared.Models
@using BlazorPWA.Shared.Data
@using Microsoft.AspNetCore.Components.Forms
@using XpertStudio.Common.Data
@using MudBlazor.Components.XS
@using BlazorPWA.Client.Pages.MachineTest.Transaction
@using BlazorPWA.Shared.VMs
@using Microsoft.JSInterop
@using BlazorPWA.Client.Pages.MachineTest.Setup




<AuthorizeView Context="authContext" Policy="@Policies.IsAnonymousUser" Resource="typeof(PurchaseOrderBasePage)">
    <Authorized>
        @if (PageType == XpertStudio.Common.Enums.BlazorPWAPageTypes.Create)
        {
            <h1>Create Purchase Order</h1>
        }
        else if (PageType == XpertStudio.Common.Enums.BlazorPWAPageTypes.Edit)
        {
            <h1>Edit Purchase Order</h1>
        }
        else if (PageType == XpertStudio.Common.Enums.BlazorPWAPageTypes.Delete)
        {
            <h1>Delete Purchase Order</h1>
        }
        else if (PageType == XpertStudio.Common.Enums.BlazorPWAPageTypes.View)
        {
            <h1>View Purchase Order</h1>
        }
        else
        {
            <h1>Purchase Order</h1>
        }
        <br />
        <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <XSGrid>
                <MudItem xs="12" sm="10">
                    <XSCard>
                        <MudCardContent>
                            <XSTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa - 6">
                                <MudTabPanel Text="General">
                                    <XSExpansionPanels MultiExpansion="true">
                                        <XSExpansionPanel IsExpanded=true HideIcon=true>
                                            <TitleContent>
                                                <MudText Class="mt-1"><strong>Header</strong></MudText>
                                            </TitleContent>
                                            <ChildContent>
                                                <XSTextBox @ref="txtPOCode" ReadOnly="@(PageType == XpertStudio.Common.Enums.BlazorPWAPageTypes.Create && ReadOnly == false ?  false : true)" Label="PO No" HelperText="Max. 10 characters"
                                                           @bind-Value="Model.ID" For="@(() => Model.ID)" />
                                                <XSTextBox @ref="txtComments" ReadOnly=@(ReadOnly || false) Label="Comments" HelperText="Max. 50 characters"
                                                           @bind-Value="Model.Description" For="@(() => Model.Description)" />
                                                <XSDatePicker @ref="dtpPODate" Label="Date" @bind-Date="Model.PODate" ReadOnly=@(ReadOnly || false) DateFormat="dd/MM/yyyy" />
                                                <XSNumberBox @ref="txtPOAmt" @bind-Value="Model.POTotAmt" Label="Amount" Variant="Variant.Text" ReadOnly=@(ReadOnly || true) />
                                                <XSTextBox @ref="txtRemarks" ReadOnly=@(ReadOnly || false) Label="Remarks" HelperText="Max. 50 characters"
                                                           @bind-Value="Model.PORemarks" For="@(() => Model.PORemarks)" />
                                                <XSFinder T="FinderData" @ref="txtVendor" Label="Select Vendor" @bind-Value="POVCodeValue" Required="true" ReadOnly=@(ReadOnly || false)
                                                          SearchFunc="@SearchPOVCode" Immediate="true" CoerceValue="true" ResetValueOnEmptyText="true"
                                                          AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary"
                                                          ToStringFunc="@DisplayPOVCode" />
                                                <XSNumberBox @ref="txtDocAmt" @bind-Value="Model.Document_Amount" Label="Document Amount" Variant="Variant.Text" ReadOnly=@(ReadOnly || false) />
                                            </ChildContent>
                                        </XSExpansionPanel>
                                        @if (Visible_gbxDetails)
                                        {
                                            <XSExpansionPanel IsExpanded=true HideIcon=true>
                                                <TitleContent>
                                                    <MudText Class="mt-1"><strong>Details</strong></MudText>
                                                </TitleContent>
                                                <ChildContent>
                                                    <PurchaseOrderPO_ItemsGridPage ParentID="@Model.ID" Model="Model" GridData="Model.PO_Items">
                                                    </PurchaseOrderPO_ItemsGridPage>
                                                </ChildContent>
                                            </XSExpansionPanel>
                                        }
                                        <XSExpansionPanel IsExpanded=true HideIcon=true>
                                            <TitleContent>
                                                <MudText Class="mt-1"><strong>Photograph</strong></MudText>
                                            </TitleContent>
                                            <ChildContent>
                                                <XSImage DisplayImage="true" ImageSrc="@_ImageSrcfilePhoto" Width="164" Height="104" ObjectFit="ObjectFit.Fill" Fluid="false" Hidden="false" T="IBrowserFile" AppendMultipleFiles="false" @ref="pcbPhoto" Disabled=@(ReadOnly || false) MaxSize="1" MinSize="0" CurrentFile="_UploadedfilePhoto" OnOpenFile="OnfilePhotoOpen" OnFilesChanged="OnfilePhotoChanged" />
                                            </ChildContent>
                                        </XSExpansionPanel>
                                    </XSExpansionPanels>
                                </MudTabPanel>
                                <MudTabPanel Text="Others">
                                    <XSExpansionPanels MultiExpansion="true">
                                        <XSExpansionPanel IsExpanded=true HideIcon=true>
                                            <TitleContent>
                                                <MudText Class="mt-1"><strong>xpertGroupBox1</strong></MudText>
                                            </TitleContent>
                                            <ChildContent>
                                                <XSMultiSelectFinder1 T="FinderData" @ref="XpertMultiSelctFinder" FinderPage="typeof(ItemMaster)" FinderUrl="/MachineTest/Setup/ItemMaster" Label="Select Item List" @bind-Values="@POItemListValue" Required="true" ReadOnly=@(ReadOnly || false)
                                                                     Immediate="true" CoerceValue="true" ResetValueOnEmptyText="true"
                                                                     AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary"
                                                                      @onblur="SetSelecetdValues" />
                                            </ChildContent>
                                        </XSExpansionPanel>
                                    </XSExpansionPanels>
                                </MudTabPanel>
                            </XSTabs>
                        </MudCardContent>
                        <MudCardContent>
                            <XSExpansionPanels MultiExpansion="true">
                            </XSExpansionPanels>
                        </MudCardContent>
                        <MudCardActions>
                            <XSButton ButtonType="ButtonType.Button" Variant="Variant.Outlined" Color="Color.Primary" OnClick="NavigateToIndex" Class="mr - 4">Back</XSButton>
                            @if (CrudType == XpertStudio.Common.Enums.XpertCrudTypes.Create)
                            {
                                <XSButton ButtonType="ButtonType.Reset" Variant="Variant.Outlined" Color="Color.Primary" Class="mr - 4">Reset</XSButton>
                                <XSButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Class="mr - 4">Save</XSButton>
                            }
                            @if (CrudType == XpertStudio.Common.Enums.XpertCrudTypes.Edit)
                            {
                                <XSButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Class="mr - 4">Edit</XSButton>
                            }
                            @if (CrudType == XpertStudio.Common.Enums.XpertCrudTypes.Delete)
                            {
                                <XSButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Class="mr - 4">Delete</XSButton>
                            }
                        </MudCardActions>
                    </XSCard>
                </MudItem>
                @if (ShowValidationSummary == true)
                {
                    <MudItem xs="12" sm="2">
                        <XSPaper Class="pa - 4 mud - height - full">
                            <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                            @if (success)
                            {
                                <MudText Color="Color.Success">Success</MudText>
                            }
                            else
                            {
                                <MudText Color="@Color.Error">
                                    <ValidationSummary />
                                </MudText>
                            }
                        </XSPaper>
                    </MudItem>
                }
            </XSGrid>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to access this resource!!</p>
    </NotAuthorized>
</AuthorizeView>

@code {
}
