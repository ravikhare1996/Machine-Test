@page "/Account/Manage/Profile"
@using Microsoft.AspNetCore.Components.Authorization;
@inject IAuthService auth
<h3>User Profile</h3>
<AuthorizeView >
    <Authorized>
        @if (!_loaded)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            @*  <UserProfileInfo User="@User" error="@error" /> *@
            @* <MudAlert Severity="Severity.Error">@error</MudAlert> *@
            <MudTabs Position="Position.Top" Rounded="true" Border="true" Class="w-100">
                <MudTabPanel Text="Profile" Class="w-600">
                    <UserProfileInfo User="@User" error="@error" />
                </MudTabPanel>
                <MudTabPanel Text="Password">
                    <ChangePassword User="@User" />
                </MudTabPanel>
                <MudTabPanel Text="Reset Password">
                    <ResetPassword User="@User" />
                </MudTabPanel>
                <MudTabPanel Text="Email">

                </MudTabPanel>

            </MudTabs>
        }
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized to view this page.</p>
    </NotAuthorized>
    
</AuthorizeView>

    
@code {

    [Inject] IUserAccountManager userAccountManager { get; set; }
    private string error = "";
    private bool success;
    private bool _loaded=false;
    // [Parameter]
    // public string UserID { get; set; }
    [Parameter]
    public bool ShowValidationSummary { get; set; }
    private UserAccountDto User { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        //User = authState.User.Identity.Name;
        var user = (await auth.GetUserId());        
        var result = await userAccountManager.GetUserDetails(user);
        if (result.Success)
        {
            User = result.Data;
        }
        else
        {
            error = "User details not found!";
        }
        _loaded = true;
    }
}
